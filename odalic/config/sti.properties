####################
#	FILE PATHS 	   #
####################
# STI home folder. All other file paths wil be relative to this (except otherwise stated).
sti.home = /usr/local/odalic
# Folder containing nlp resources, by default this is the "/resource" folder in the distribution.
sti.nlp = resources/
# Folder containing cached data. Whenever KB search or Web search is performed,
# the query and results are cached in a Solr instance. This specifies the base
# path of all Solr instances.
sti.cache.main.dir = resources/cache/
# Web search configuration files. By default, it is in the "/config" folder of the distribution.
sti.websearch.properties = config/websearch.properties

################################################
#	Subject column detection, the ws scorer	   #
################################################
# Choose whether STI should use the ws score in detecting subject column.
sti.subjectcolumndetection.ws = true
# If ws is used, what stopping criteria class should be used.
# Must extend the uk.ac.shef.dcs.sti.core.algorithm.tmp.stopping class.
sti.iinf.websearch.stopping.class = uk.ac.shef.dcs.sti.core.algorithm.tmp.stopping.IInf
# If ws is used, for the stopping criteria class provided above, also provide its constructor
# parameters in the order it is defined in the class, delimited by ",".
sti.iinf.websearch.stopping.class.constructor.params = 0.0,1,0.01

########################
# RELATION ENUMERATION #
########################
# Choose whether or not STI should annotate relations.
sti.learning.relation = true

##########
# OUTPUT #
##########
# Prefix mapping configuration for the resources provided to the clients.
cz.cuni.mff.xrg.odalic.prefixes = config/PrefixMapping.ttl

#############################################################
# TABLEMINER+: LEARNING (only needed if you run tableminer+ #
#############################################################
# What stopping criteria class should be used in the iinf for preliminary column classification.
# Must extend the uk.ac.shef.dcs.sti.core.algorithm.tmp.stopping class.
sti.tmp.iinf.learning.stopping.class = uk.ac.shef.dcs.sti.core.algorithm.tmp.stopping.IInf
# For the stopping criteria class provided above, also provide its constructor parameters in
# the order it is defined in the class values separated by ",".
sti.tmp.iinf.learning.stopping.class.constructor.params = 0.0,1,0.05

########
# MAIL #
########
# SMTP server user name.
mail.username = odalic@email.cz
# SMTP server password.
mail.password = password
# Sender of the outgoing e-mails.
mail.from = odalic@email.cz
# Address of the SMTP server.
mail.smtp.host = smtp.seznam.cz
# Choose whether or the SMTP server use authentication.
mail.smtp.auth = true
# Port of the SMTP server.
mail.smtp.port = 465
# Class used as socket factory.
mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
# Port used by the socket factory.
mail.smtp.socketFactory.port = 465

#########
# USERS #
#########
# Maximum temporary codes kept per queue.
cz.cuni.mff.xrg.odalic.users.maximumCodesKept = 100
# Maximum hours that a single session can last.
cz.cuni.mff.xrg.odalic.users.session.maximum.hours = 172
# Length of the time window when the sign-up confirmation token is active (in minutes).
cz.cuni.mff.xrg.odalic.users.signup.window.minutes = 30
# Length of the time window when the password setting confirmation token is active (in minutes).
cz.cuni.mff.xrg.odalic.users.reset.window.minutes = 30
# URL format for a sing-up confirmation.
cz.cuni.mff.xrg.odalic.users.signup.url = http://localhost:8080/odalic-ui/index.html#/signup/%s
# URL format for a password setting confirmation.
cz.cuni.mff.xrg.odalic.users.reset.url = http://localhost:8080/odalic-ui/index.html#/chngpasswd/%s
# Administrator's email (and the user ID).
cz.cuni.mff.xrg.odalic.users.admin.email = odalic@email.cz
# Administrator's initial password. It is recommended to change it using the standard means.
cz.cuni.mff.xrg.odalic.users.admin.password = admin

##########
# TOKENS #
##########
# Issuer name of Odalic authentication tokens.
cz.cuni.mff.xrg.odalic.tokens.issuer = Odalic
# Secret used for generating and verifying authentication tokens.
cz.cuni.mff.xrg.odalic.tokens.secret = cPLsKpTZxAcDZH5cqg3bxAet3VdAJ683X8Ccu8yTyFh

###########
# STORAGE #
###########
# The local database file used to store Odalic data.
cz.cuni.mff.xrg.odalic.db.file = /usr/local/odalic/db.dat
